<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!-- Facebook (only web requesters)-->
    <bean class="com.welshare.service.social.helper.ConfigurableFacebookWebRequestor" id="defaultRequestor">
        <qualifier value="default"/>
    </bean>

    <bean class="com.welshare.service.social.helper.ConfigurableFacebookWebRequestor" id="backgroundRequestor">
        <constructor-arg value="true"/>
        <qualifier value="background"/>
    </bean>

    <!-- Twitter -->
    <bean id="twitterFactory" class="twitter4j.TwitterFactory">
        <constructor-arg>
            <bean class="com.welshare.util.TwitterConfigurationHolder">
                <property name="oAuthConsumerKey" value="${twitter.consumer.key}" />
                <property name="oAuthConsumerSecret" value="${twitter.consumer.secret}" />
                <property name="httpRetryCount" value="${twitter.retry.count}" />
                <property name="httpReadTimeout" value="${twitter.read.timeout}" />
                <property name="httpConnectionTimeout" value="${twitter.connection.timeout}" />
                <property name="GZIPEnabled" value="false" />
                <property name="MBeanEnabled" value="${twitter.statistics.enabled}" />
                <property name="userStreamRepliesAllEnabled" value="true" />
                <property name="includeEntitiesEnabled" value="true" />
            </bean>
        </constructor-arg>
    </bean>


    <!-- LinkedIn -->
    <bean id="linkedInApiClientFactory" class="com.google.code.linkedinapi.client.LinkedInApiClientFactory" factory-method="newInstance">
         <constructor-arg value="${linkedin.key}" />
         <constructor-arg value="${linkedin.secret}" />
    </bean>

    <bean id="linkedInApiOAuthFactory" class="com.google.code.linkedinapi.client.oauth.LinkedInOAuthServiceFactory" factory-method="getInstance"/>
    <bean id="linkedInOAuthService" factory-bean="linkedInApiOAuthFactory" factory-method="createLinkedInOAuthService">
         <constructor-arg value="${linkedin.key}"/>
         <constructor-arg value="${linkedin.secret}"/>
    </bean>

    <!-- Google+ -->
    <bean id="googlePlusFactory" class="com.googlecode.googleplus.GooglePlusFactory">
        <constructor-arg value="${googleplus.client.id}" />
        <constructor-arg value="${googleplus.secret}" />
        <constructor-arg>
            <bean class="com.googlecode.googleplus.GooglePlusConfiguration">
                <property name="readTimeout" value="${googleplus.read.timeout}"/>
                <property name="connectTimeout" value="${googleplus.connect.timeout}"/>
            </bean>
        </constructor-arg>
    </bean>
</beans>